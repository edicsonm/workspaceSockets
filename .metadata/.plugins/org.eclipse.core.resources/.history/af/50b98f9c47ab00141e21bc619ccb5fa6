import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

public class Server extends Thread{
	
	private Socket socket; 
    private DataInputStream entradaDatos;
    private DataOutputStream salidaDatos;
    ServerSocket servidor = null;
	
    public void run(){
    	int puerto = 1234;
        try {
            servidor = new ServerSocket(puerto);
            while (true) {
                System.out.println("Servidor a la espera de conexiones.");
                socket = servidor.accept();
                System.out.println("Cliente con la IP " + socket.getInetAddress().getHostName() + " conectado.");
                try {
                    entradaDatos = new DataInputStream(socket.getInputStream());
                    salidaDatos = new DataOutputStream(socket.getOutputStream());
//                    String mensajeRecibido = entradaDatos.readUTF();
//                    System.out.println("mensajeRecibido: " + entradaDatos.readUTF());
//                    System.out.println("mensajeRecibido: " + entradaDatos.readUTF());
//                    System.out.println("mensajeRecibido: " + entradaDatos.readUTF());
//                    System.out.println("mensajeRecibido: " + entradaDatos.readUTF());
                    String valor = entradaDatos.readUTF();
                    while(valor != null){
                    	System.out.println("mensajeRecibido: " + valor);
                    	valor = entradaDatos.readUTF();
                    	salidaDatos.writeUTF("Recibi esto : ");
                    }
                    System.out.println("Termina el server ....");
                    salidaDatos.writeUTF("Recibi esto : ");
                } catch (IOException ex) {
                	ex.printStackTrace();
                	System.out.println("Error al crear los stream de entrada y salida : " + ex.getMessage());
                }
            }
        } catch (IOException ex) {
        	System.out.println("Error: " + ex.getMessage());
        } finally{
            try {
                socket.close();
                servidor.close();
            } catch (IOException ex) {
            	System.out.println("Error al cerrar el servidor: " + ex.getMessage());
            }
        }
    }
    
	public static void main(String[] args) {
        new Server().start();
    }

	class leer {
		public leer(){
			
		}
		
		public void leer(){
			
		}
	}
	
	class escribir {
		
	}

}
